// <auto-generated />
using System;
using GrozioSalonuISCF.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GrozioSalonuISCF.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201115194246_schema4nuimtipapildomiatributai")]
    partial class schema4nuimtipapildomiatributai
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GrozioSalonuISCF.Models.Atsiliepimas", b =>
                {
                    b.Property<int>("AtsiliepimasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("PaslaugaId")
                        .HasColumnType("int");

                    b.Property<int>("PaslaugosId")
                        .HasColumnType("int");

                    b.Property<string>("aprasymas")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("data")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("paslaugos_busena")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("vardas")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("AtsiliepimasId");

                    b.HasIndex("PaslaugaId");

                    b.ToTable("Atsiliepimas");
                });

            modelBuilder.Entity("GrozioSalonuISCF.Models.Darbuotojas", b =>
                {
                    b.Property<int>("DarbuotojasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Pavarde")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("SalonasId")
                        .HasColumnType("int");

                    b.Property<string>("Vardas")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("tel_nr")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("DarbuotojasId");

                    b.HasIndex("SalonasId");

                    b.ToTable("Darbuotojas");
                });

            modelBuilder.Entity("GrozioSalonuISCF.Models.Islaidos", b =>
                {
                    b.Property<string>("IslaidosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("SalonasId")
                        .HasColumnType("int");

                    b.Property<DateTime>("data")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("paskirtis")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<float>("suma")
                        .HasColumnType("float");

                    b.HasKey("IslaidosId");

                    b.HasIndex("SalonasId");

                    b.ToTable("Islaidos");
                });

            modelBuilder.Entity("GrozioSalonuISCF.Models.Miestas", b =>
                {
                    b.Property<int>("MiestasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("pavadinimas")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("MiestasId");

                    b.ToTable("Miestas");
                });

            modelBuilder.Entity("GrozioSalonuISCF.Models.Paslauga", b =>
                {
                    b.Property<int>("PaslaugaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DarbuotojasId")
                        .HasColumnType("int");

                    b.Property<int>("PaslaugosTipasId")
                        .HasColumnType("int");

                    b.Property<int>("SalonasId")
                        .HasColumnType("int");

                    b.Property<string>("aprasymas")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<float>("kaina")
                        .HasColumnType("float");

                    b.Property<string>("pavadinimas")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("priemones")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("rekomendacijos")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<float>("trukme")
                        .HasColumnType("float");

                    b.HasKey("PaslaugaId");

                    b.HasIndex("DarbuotojasId");

                    b.HasIndex("PaslaugosTipasId");

                    b.HasIndex("SalonasId");

                    b.ToTable("Paslauga");
                });

            modelBuilder.Entity("GrozioSalonuISCF.Models.PaslaugosTipas", b =>
                {
                    b.Property<int>("PaslaugosTipasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("pavadinimas")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("PaslaugosTipasId");

                    b.ToTable("PaslaugosTipas");
                });

            modelBuilder.Entity("GrozioSalonuISCF.Models.Redagavimas", b =>
                {
                    b.Property<int>("RedagavimasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("data")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("priezastis")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("tipas")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("vartotojasId")
                        .HasColumnType("int");

                    b.HasKey("RedagavimasId");

                    b.HasIndex("vartotojasId");

                    b.ToTable("Redagavimas");
                });

            modelBuilder.Entity("GrozioSalonuISCF.Models.Rezervacija", b =>
                {
                    b.Property<int>("nr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PaslaugaId")
                        .HasColumnType("int");

                    b.Property<bool>("busenos")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("data")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("proc_prad")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("vartotojasId")
                        .HasColumnType("int");

                    b.HasKey("nr");

                    b.HasIndex("PaslaugaId");

                    b.HasIndex("vartotojasId");

                    b.ToTable("Rezervacija");
                });

            modelBuilder.Entity("GrozioSalonuISCF.Models.Salonas", b =>
                {
                    b.Property<int>("SalonasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MiestasId")
                        .HasColumnType("int");

                    b.Property<string>("adresas")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("ikurimo_data")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("imones_kodas")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("pavadinimas")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("tel_nr")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("vartotojasId")
                        .HasColumnType("int");

                    b.HasKey("SalonasId");

                    b.HasIndex("MiestasId");

                    b.HasIndex("vartotojasId");

                    b.ToTable("Salonas");
                });

            modelBuilder.Entity("GrozioSalonuISCF.Models.Vartotojas", b =>
                {
                    b.Property<int>("vartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("vartId");

                    b.ToTable("Vartotojas");
                });

            modelBuilder.Entity("GrozioSalonuISCF.Models.Atsiliepimas", b =>
                {
                    b.HasOne("GrozioSalonuISCF.Models.Paslauga", "Paslauga")
                        .WithMany()
                        .HasForeignKey("PaslaugaId");
                });

            modelBuilder.Entity("GrozioSalonuISCF.Models.Darbuotojas", b =>
                {
                    b.HasOne("GrozioSalonuISCF.Models.Salonas", "Salonas")
                        .WithMany("Darbuotojas")
                        .HasForeignKey("SalonasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrozioSalonuISCF.Models.Islaidos", b =>
                {
                    b.HasOne("GrozioSalonuISCF.Models.Salonas", "Salonas")
                        .WithMany("Islaidos")
                        .HasForeignKey("SalonasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrozioSalonuISCF.Models.Paslauga", b =>
                {
                    b.HasOne("GrozioSalonuISCF.Models.Darbuotojas", "Darbuotojas")
                        .WithMany("Paslauga")
                        .HasForeignKey("DarbuotojasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrozioSalonuISCF.Models.PaslaugosTipas", "PaslaugosTipas")
                        .WithMany("Paslauga")
                        .HasForeignKey("PaslaugosTipasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrozioSalonuISCF.Models.Salonas", "Salonas")
                        .WithMany("Paslauga")
                        .HasForeignKey("SalonasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrozioSalonuISCF.Models.Redagavimas", b =>
                {
                    b.HasOne("GrozioSalonuISCF.Models.Vartotojas", "Vartotojas")
                        .WithMany("Redagavimas")
                        .HasForeignKey("vartotojasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrozioSalonuISCF.Models.Rezervacija", b =>
                {
                    b.HasOne("GrozioSalonuISCF.Models.Paslauga", "Paslauga")
                        .WithMany("Rezervacija")
                        .HasForeignKey("PaslaugaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrozioSalonuISCF.Models.Vartotojas", "Vartotojas")
                        .WithMany("Rezervacija")
                        .HasForeignKey("vartotojasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GrozioSalonuISCF.Models.Salonas", b =>
                {
                    b.HasOne("GrozioSalonuISCF.Models.Miestas", "Miestas")
                        .WithMany("Salonas")
                        .HasForeignKey("MiestasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrozioSalonuISCF.Models.Vartotojas", "Vartotojas")
                        .WithMany("Salonas")
                        .HasForeignKey("vartotojasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
